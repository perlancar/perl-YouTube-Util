package YouTube::Util;

# AUTHORITY
# DATE
# DIST
# VERSION

use 5.010001;
use strict;
use warnings;

use Regexp::Pattern::YouTube;

use Exporter qw(import);
our @EXPORT_OK = qw(
                       extract_youtube_video_id
               );

our %SPEC;

$SPEC{extract_youtube_video_id} = {
    v => 1.1,
    summary => 'Extract YouTube video ID from a string containing video ID, or youtube-dl-generated filename, or YouTube URL',
    description => <<'_',

Return undef if not found.

_
    args => {
        arg => {
            schema => ['str*'],
            req => 1,
            pos => 0,
        },
    },
    args_as => 'array',
    result_naked => 1,
    examples => [
        {args => {arg => 'https://www.youtube.com/watch?v=rp4UwPZfRis'}, result => 'rp4UwPZfRis'},
        {args => {arg => 'https://www.youtube.com/watch?v=cl1p7SOwnEk&list=PLjxOg4YY7Ah2JGb_QvA6KSB6YmikzA2fo&index=2&t=0s'}, result => 'cl1p7SOwnEk'},
        {args => {arg => 'https://www.youtube.com/watch?list=PLjxOg4YY7Ah2JGb_QvA6KSB6YmikzA2fo&v=cl1p7SOwnEk&index=2&t=0s'}, result => 'cl1p7SOwnEk'},
        {args => {arg => 'https://www.youtube.com/embed/U9v2S49sHeQ?rel=0'}, result => 'U9v2S49sHeQ'},
        {args => {arg => 'https://youtu.be/U9v2S49sHeQ'}, result => 'U9v2S49sHeQ'},
        {args => {arg => '$100,000 Name That Tune - Nick vs. Carol-SY-DnVZeFH0.mp4'}, result => 'SY-DnVZeFH0'},
        {args => {arg => 'GNdALsnBjh8'}, result => 'GNdALsnBjh8'},
        {args => {arg => 'foo'}, result => undef},
    ],
};
sub extract_youtube_video_id {
    my $arg = shift;

    my $re = $Regexp::Pattern::YouTube::RE{video_id}{pat};
    if ($arg =~ /\A$re\z/) {
        return $arg;
    } elsif ($arg =~ m!\Ahttps?://youtu\.be/($re)(?:\?|\#|\z)!) {
        return $1;
    } elsif ($arg =~ m!\Ahttps?://.+/embed/! &&
                 $arg =~ m!/embed/($re)(?:\?|\#|\z)!) {
        return $1;
    } elsif ($arg =~ m!\Ahttps?://! &&
                 $arg =~ /=($re)(?:&|\#|\z)/) {
        return $1;
    } else {
        # assume it's a filename like that generated by youtube-dl
        if ($arg =~ /-($re)(?:\.\w+)+(?:\s|\z)/) {
            return $1;
        }
    }
    undef;
}

1;
# ABSTRACT: YouTube-related utilities

=head1 SEE ALSO

L<Regexp::Pattern::YouTube>

L<App::YouTubeUtils>

=cut
